name: Build and Deploy Storybook

env:
  GIT_FAKE_EMAIL: dt-dds@daimlertruck.com
  GIT_FAKE_USER: dt-dds

on:
  push:
    branches:
      - main
    paths:
      - 'packages/dt-dds-react/**'
      - 'packages/react-packages/**'
      - 'apps/docs/**'

  pull_request:
    paths:
      - 'packages/dt-dds-react/**'
      - 'packages/react-packages/**'
      - 'apps/docs/**'

jobs:
  build-storybook:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    if: "!contains(github.event.head_commit.message, 'release:')"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup node and yarn
        uses: './.github/actions/yarn-node-install'
        with:
          CACHE_FILE_NAME: 'global'

      - name: Build dependencies
        run: yarn run turbo build --filter='./packages/*'

      - name: Build Storybook
        run: |
          cd apps/docs
          yarn build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: './apps/docs/storybook-static'
          name: storybook-static

  deploy-storybook:
    needs: build-storybook
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup fake credentials
        run: |
          git config --global user.email ${{ env.GIT_FAKE_EMAIL }}
          git config --global user.name ${{ env.GIT_FAKE_USER }}

      - name: Create new branch
        run: |
          git checkout -b gh-pages-${{ github.run_number }} origin/gh-pages

      - name: Download Storybook files
        uses: actions/download-artifact@v4.1.7
        if: github.event_name == 'push'
        with:
          name: storybook-static
          path: ${{ github.workspace }}

      - name: Download Storybook files
        uses: actions/download-artifact@v4.1.7
        if: github.event_name == 'pull_request'
        with:
          name: storybook-static
          path: ${{ github.workspace }}/PR-${{ github.event.number }}

      # Not perfect, but should solve the issue.
      # See: https://github.com/storybookjs/storybook/issues/20564
      - name: Create .nojekyll file
        run: |
          touch .nojekyll

      - name: Deploy Storybook
        run: |
          git add . --all
          echo -e "\n\033[34m==>\033[0;1m" "Checking for Changes\033[0m"
          if [[ -z $(git status -s) ]]; then
            echo -e "\033[33;1m==>\033[0m" "No Changes found."
            exit 0
          else
            echo -e "\n\033[34m==>\033[0;1m" "Changes found.\033[0m"
            git commit -m "chore: update and publish Storybook"
            git checkout gh-pages
            git merge gh-pages-${{ github.run_number }}
            git push origin gh-pages
          fi

  change_pr_description:
    runs-on: ubuntu-latest
    needs: deploy-storybook
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check PR Description
        id: check_pr_description
        run: |
          # Get PR details using GitHub API
          PR_VIEW_OUTPUT=$(curl -s \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.number }}" \
            | jq -r '.body // ""')

          PREVIEW_LINK="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/PR-${{ github.event.number }}"

          # Check if preview link already exists
          if echo "$PR_VIEW_OUTPUT" | grep -Fq "$PREVIEW_LINK"; then
            echo "Preview Link is already in the description."
            exit 0
          fi

          # Create new body with preview link
          NEW_BODY=$(jq -n --arg current "$PR_VIEW_OUTPUT" --arg link "$PREVIEW_LINK" '$current + "\n\n" + $link')
            
          # Update PR description
          curl -s \
            -X PATCH \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.number }}" \
            -d "{\"body\": $NEW_BODY}"

  delete_previews:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && !contains(github.event.head_commit.message, 'release:')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup fake credentials
        run: |
          git config --global user.email ${{ env.GIT_FAKE_EMAIL }}
          git config --global user.name ${{ env.GIT_FAKE_USER }}

      - name: Delete Preview Environment
        shell: bash
        run: |
          COMMIT_HASH=$(git rev-parse HEAD)
          FOUND_PR_NUMBER=$(curl --request GET --url "${{ github.server_url }}/api/v3/repos/${{ github.repository }}/commits/$COMMIT_HASH/pulls?state=closed" --header "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" | jq -r ".[].number")

          if [ -z "$FOUND_PR_NUMBER" ]; then
            echo "PR not found."
            exit 0
          else
            echo "Will delete preview environment for: PR-$FOUND_PR_NUMBER"

            git checkout -b gh-pages-${{ github.run_number }} origin/gh-pages
            rm -rf PR-$FOUND_PR_NUMBER
            git add . --all

            git commit -m "chore: delete PR preview"
            git checkout gh-pages
            git merge gh-pages-${{ github.run_number }}
            git push origin gh-pages
          fi
